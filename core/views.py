#coding: utf-8from django.shortcuts import render, HttpResponseRedirect, get_object_or_404from django.contrib.auth.decorators import login_requiredfrom core.forms import UploadCSVFilefrom django.contrib import messagesfrom users.models import Userfrom core.models import Landingfrom django.core.urlresolvers import reversedef page_404(request):    return render(request, 'core/404.html', {'message': 'Page not found - 404'})def index(request):    if request.user.is_authenticated():        return HttpResponseRedirect(reverse('users:profile'))    return render(request, 'core/index.html')def tos(request):    if request.is_ajax():        return render(request, 'core/ajax_tos.html')    else:        return render(request, 'core/tos.html')def about(request):    return render(request, 'core/about.html')@login_requireddef landing(request):    context = {        'landing': Landing.objects.all(),        'userCount': User.objects.all()    }    return render(request, 'core/stat.html', context)@login_requireddef importFromCSV(request):    if request.FILES:        form = UploadCSVFile(request.FILES)        if form.is_valid():            # change from model to those            # file_csv = request.FILES.get('file')            # raise Exception(str(type(file_csv)))#                    csvfile = self.file.open(mode='r')#        reader = csv.reader(csvfile)#        for domain, serverpath, link, phonepic, phonetext, linkphonepic, emailistext, emailispic, linkemailpic, \#                visit, visitlink, visitdomain, piwik, piwiknum, logoid, freeamount, bonus, bonus2, bonus3, \#                currency, livechat, serverpathfile, regform in reader:#            self.domen = domain#            self.server_path = serverpath#            self.link = link#            self.phoneIsPic = phonepic#            self.phoneIsText = phonetext#            self.linkPhonePic = linkphonepic#            self.emailIsText = emailistext#            self.emailIsPic = emailispic#            self.linkEmailPic = linkemailpic#            self.visit = visit#            self.visitLink = visitlink#            self.visitDomain = visitdomain#            self.piwik = piwik#            self.piwikNumber = piwiknum#            self.logoId = logoid#            self.freeAmmount = freeamount#            self.bonus = bonus#            self.bonus2 = bonus2#            self.bonus3 = bonus3#            self.currency = currency#            self.liveChat = livechat#            self.serverPathFile = serverpathfile#            self.regForm = regform#        super(Landing, self).save(#            force_insert=force_insert,#            force_update=force_update,#            using=using,#            update_fields=update_fields#        )            form.save()            messages.success(request, 'File was upload successful.')            return HttpResponseRedirect(                reverse('landing:landing')            )    return render(request, 'core/csv.html')